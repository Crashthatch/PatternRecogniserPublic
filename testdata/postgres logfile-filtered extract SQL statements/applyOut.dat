SELECT version();

SET DateStyle=ISO;
SET client_min_messages=notice;
SET bytea_output=escape;
SELECT oid, pg_encoding_to_char(encoding) AS encoding, datlastsysoid
  FROM pg_database WHERE datname='postgres'

set client_encoding to 'UNICODE'

SELECT usecreatedb, usesuper, CASE WHEN usesuper THEN pg_postmaster_start_time() ELSE NULL END as upsince, CASE WHEN usesuper THEN pg_conf_load_time() ELSE NULL END as confloadedsince, CASE WHEN usesuper THEN pg_is_in_recovery() ELSE NULL END as inrecovery, CASE WHEN usesuper THEN pg_last_xlog_receive_location() ELSE NULL END as receiveloc, CASE WHEN usesuper THEN pg_last_xlog_replay_location() ELSE NULL END as replayloc, CASE WHEN usesuper THEN pg_last_xact_replay_timestamp() ELSE NULL END as replay_timestamp, CASE WHEN usesuper AND pg_is_in_recovery() THEN pg_is_xlog_replay_paused() ELSE NULL END as isreplaypaused
  FROM pg_user WHERE usename=current_user

SELECT rolcreaterole, rolcreatedb FROM pg_roles WHERE rolname = current_user;

SELECT db.oid, datname, db.dattablespace AS spcoid, spcname, datallowconn, datacl, pg_encoding_to_char(encoding) AS serverencoding, pg_get_userbyid(datdba) AS datowner,has_database_privilege(db.oid, 'CREATE') as cancreate, 
current_setting('default_tablespace') AS default_tablespace, 
descr.description
, db.datconnlimit as connectionlimit, db.datcollate as collate, db.datctype as ctype,
(SELECT array_agg(label) FROM pg_shseclabel sl1 WHERE sl1.objoid=db.oid) AS labels,
(SELECT array_agg(provider) FROM pg_shseclabel sl2 WHERE sl2.objoid=db.oid) AS providers  FROM pg_database db
  LEFT OUTER JOIN pg_tablespace ta ON db.dattablespace=ta.OID
  LEFT OUTER JOIN pg_shdescription descr ON (db.oid=descr.objoid AND descr.classoid='pg_database'::regclass)
 ORDER BY datname

SELECT ts.oid, spcname, pg_catalog.pg_tablespace_location(ts.oid) AS spclocation, spcoptions, pg_get_userbyid(spcowner) as spcuser, spcacl, pg_catalog.shobj_description(oid, 'pg_tablespace') AS description, (SELECT array_agg(label) FROM pg_shseclabel sl1 WHERE sl1.objoid=ts.oid) AS labels, (SELECT array_agg(provider) FROM pg_shseclabel sl2 WHERE sl2.objoid=ts.oid) AS providers FROM pg_tablespace ts
 ORDER BY spcname

SELECT cl.oid FROM pg_class cl JOIN pg_namespace ns ON ns.oid=relnamespace
 WHERE relname='pga_job' AND nspname='pgagent'

SELECT has_table_privilege('pg_authid', 'SELECT')

SELECT tab.oid, tab.*, pg_catalog.shobj_description(tab.oid, 'pg_authid') AS description,
(SELECT array_agg(label) FROM pg_shseclabel sl1 WHERE sl1.objoid=tab.oid) AS labels,
(SELECT array_agg(provider) FROM pg_shseclabel sl2 WHERE sl2.objoid=tab.oid) AS providers FROM pg_authid tab WHERE NOT rolcanlogin ORDER BY rolname

SELECT has_table_privilege('pg_authid', 'SELECT')

SELECT tab.oid, tab.*, pg_catalog.shobj_description(tab.oid, 'pg_authid') AS description,
(SELECT array_agg(label) FROM pg_shseclabel sl1 WHERE sl1.objoid=tab.oid) AS labels,
(SELECT array_agg(provider) FROM pg_shseclabel sl2 WHERE sl2.objoid=tab.oid) AS providers FROM pg_authid tab WHERE rolcanlogin ORDER BY rolname

SELECT setting FROM pg_settings WHERE name IN ('autovacuum', 'track_counts')

SELECT version();

SELECT proname, pronargs, proargtypes[0] AS arg0, proargtypes[1] AS arg1, proargtypes[2] AS arg2
  FROM pg_proc
  JOIN pg_namespace n ON n.oid=pronamespace
 WHERE proname IN ('pg_tablespace_size', 'pg_file_read', 'pg_logfile_rotate', 'pg_postmaster_starttime', 'pg_terminate_backend', 'pg_reload_conf', 'pgstattuple', 'pgstatindex')
   AND nspname IN ('pg_catalog', 'public')

SELECT count(*) FROM pg_attribute WHERE attrelid = 'pg_catalog.pg_proc'::regclass AND attname = 'proargdefaults'

SELECT 1;

SELECT rolname FROM pg_roles WHERE rolcanlogin ORDER BY 1

SELECT name, vartype, min_val, max_val
  FROM pg_settings WHERE context in ('user', 'superuser')

SELECT oid, spcname FROM pg_tablespace WHERE spcname <> 'pg_global' ORDER BY spcname

SELECT current_setting('default_tablespace');

SELECT datname FROM pg_database ORDER BY datname

select DISTINCT(datctype) from pg_database UNION SELECT DISTINCT(datcollate) from pg_database

SELECT pg_encoding_to_char(0)

SELECT pg_encoding_to_char(1)

SELECT pg_encoding_to_char(2)

SELECT pg_encoding_to_char(3)

SELECT pg_encoding_to_char(4)

SELECT pg_encoding_to_char(5)

SELECT pg_encoding_to_char(6)

SELECT pg_encoding_to_char(7)

SELECT pg_encoding_to_char(8)

SELECT pg_encoding_to_char(9)

SELECT pg_encoding_to_char(10)

SELECT pg_encoding_to_char(11)

SELECT pg_encoding_to_char(12)

SELECT pg_encoding_to_char(13)

SELECT pg_encoding_to_char(14)

SELECT pg_encoding_to_char(15)

SELECT pg_encoding_to_char(16)

SELECT pg_encoding_to_char(17)

SELECT pg_encoding_to_char(18)

SELECT pg_encoding_to_char(19)

SELECT pg_encoding_to_char(20)

SELECT pg_encoding_to_char(21)

SELECT pg_encoding_to_char(22)

SELECT pg_encoding_to_char(23)

SELECT pg_encoding_to_char(24)

SELECT pg_encoding_to_char(25)

SELECT pg_encoding_to_char(26)

SELECT pg_encoding_to_char(27)

SELECT pg_encoding_to_char(28)

SELECT pg_encoding_to_char(29)

SELECT pg_encoding_to_char(30)

SELECT pg_encoding_to_char(31)

SELECT pg_encoding_to_char(32)

SELECT pg_encoding_to_char(33)

SELECT pg_encoding_to_char(34)

SELECT pg_encoding_to_char(35)

SELECT pg_encoding_to_char(36)

SELECT pg_encoding_to_char(37)

SELECT pg_encoding_to_char(38)

SELECT pg_encoding_to_char(39)

SELECT pg_encoding_to_char(40)

SELECT pg_encoding_to_char(41)

SELECT pg_encoding_to_char(42)

SELECT pg_encoding_to_char(encoding) FROM pg_database WHERE datname = 'template0'

SELECT groname FROM pg_group ORDER BY groname

SELECT rolname FROM pg_roles WHERE rolcanlogin ORDER BY 1

CREATE DATABASE tom1
  WITH ENCODING='UTF8'
       CONNECTION LIMIT=-1;


SELECT db.oid, datname, db.dattablespace AS spcoid, spcname, datallowconn, datacl, pg_encoding_to_char(encoding) AS serverencoding, pg_get_userbyid(datdba) AS datowner,has_database_privilege(db.oid, 'CREATE') as cancreate, 
current_setting('default_tablespace') AS default_tablespace, 
descr.description
, db.datconnlimit as connectionlimit, db.datcollate as collate, db.datctype as ctype,
(SELECT array_agg(label) FROM pg_shseclabel sl1 WHERE sl1.objoid=db.oid) AS labels,
(SELECT array_agg(provider) FROM pg_shseclabel sl2 WHERE sl2.objoid=db.oid) AS providers  FROM pg_database db
  LEFT OUTER JOIN pg_tablespace ta ON db.dattablespace=ta.OID
  LEFT OUTER JOIN pg_shdescription descr ON (db.oid=descr.objoid AND descr.classoid='pg_database'::regclass)
 ORDER BY datname

SELECT version();

SET DateStyle=ISO;
SET client_min_messages=notice;
SET bytea_output=escape;
SELECT oid, pg_encoding_to_char(encoding) AS encoding, datlastsysoid
  FROM pg_database WHERE oid = 4356684

set client_encoding to 'UNICODE'

SELECT proname FROM pg_proc WHERE proname='pg_get_viewdef' AND proargtypes[1]=16

SHOW search_path

SELECT nspname, session_user=nspname AS isuser FROM pg_namespace

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 0::OID AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 0::OID AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 0::OID AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 0::OID AND defaclobjtype='T'

SELECT 2 AS nsptyp,
       nsp.nspname, nsp.oid, pg_get_userbyid(nspowner) AS namespaceowner, nspacl, description,       FALSE as cancreate
  FROM pg_namespace nsp
  LEFT OUTER JOIN pg_description des ON (des.objoid=nsp.oid AND des.classoid='pg_namespace'::regclass)
 WHERE ((nspname = 'pg_catalog' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pg_class' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'pgagent' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pga_job' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'information_schema' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'tables' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname LIKE '_%' AND EXISTS (SELECT 1 FROM pg_proc WHERE proname='slonyversion' AND pronamespace = nsp.oid LIMIT 1))
)  AND nspname NOT LIKE E'pg\\_temp\\_%'AND nspname NOT LIKE E'pg\\_toast_temp\\_%' ORDER BY 1, nspname

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11480::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11480::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11480::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11480::oid AND defaclobjtype='T'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 11::oid AND defaclobjtype='T'

SELECT e.oid, e.xmin, e.evtname AS name, REPLACE(e.evtevent, '_', ' ') AS eventname, pg_catalog.pg_get_userbyid(e.evtowner) AS eventowner,  CASE e.evtenabled WHEN 'O' THEN 'enabled' WHEN 'R' THEN 'replica' WHEN 'A' THEN 'always' WHEN 'D' THEN 'disabled' END AS enabled,  e.evtfoid AS eventfuncoid, e.evtfoid::regproc AS eventfunname, array_to_string(array(select quote_literal(x) from unnest(evttags) as t(x)), ', ') AS when,  pg_catalog.obj_description(e.oid, 'pg_event_trigger') AS comment,  p.prosrc AS source, p.pronamespace AS schemaoid, l.lanname AS language FROM pg_event_trigger e
 LEFT OUTER JOIN pg_proc p ON p.oid=e.evtfoid
 LEFT OUTER JOIN pg_language l ON l.oid=p.prolang
 WHERE 1=1  ORDER BY e.evtname 

select x.oid, pg_get_userbyid(extowner) AS owner, x.extname, n.nspname, x.extrelocatable, x.extversion, e.comment  FROM pg_extension x
  JOIN pg_namespace n on x.extnamespace=n.oid
  join pg_available_extensions() e(name, default_version, comment) ON x.extname=e.name

 ORDER BY x.extname

SELECT CASE WHEN nspname LIKE E'pg\\_temp\\_%' THEN 1
            WHEN (nspname LIKE E'pg\\_%') THEN 0
            ELSE 3 END AS nsptyp,
       nsp.nspname, nsp.oid, pg_get_userbyid(nspowner) AS namespaceowner, nspacl, description,       has_schema_privilege(nsp.oid, 'CREATE') as cancreate,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=nsp.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=nsp.oid) AS providers
  FROM pg_namespace nsp
  LEFT OUTER JOIN pg_description des ON (des.objoid=nsp.oid AND des.classoid='pg_namespace'::regclass)
 WHERE NOT ((nspname = 'pg_catalog' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pg_class' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'pgagent' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pga_job' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'information_schema' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'tables' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname LIKE '_%' AND EXISTS (SELECT 1 FROM pg_proc WHERE proname='slonyversion' AND pronamespace = nsp.oid LIMIT 1))
)  AND nspname NOT LIKE E'pg\\_temp\\_%'AND nspname NOT LIKE E'pg\\_toast_temp\\_%' ORDER BY 1, nspname

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='T'

SELECT nsp.oid, substr(nspname, 2) as clustername, nspname, pg_get_userbyid(nspowner) AS namespaceowner, description
  FROM pg_namespace nsp
  LEFT OUTER JOIN pg_description des ON des.objoid=nsp.oid
  JOIN pg_proc pro ON pronamespace=nsp.oid AND proname = 'slonyversion'
 ORDER BY nspname

SELECT COUNT(*) FROM
   (SELECT tgargs from pg_trigger tr
      LEFT JOIN pg_depend dep ON dep.objid=tr.oid AND deptype = 'i'
      LEFT JOIN pg_constraint co ON refobjid = co.oid AND contype = 'f'
     WHERE 
tgisinternal
     AND co.oid IS NULL
     GROUP BY tgargs
    HAVING count(1) = 3) AS foo

WITH configs AS (SELECT rolname, unnest(setconfig) AS config FROM pg_db_role_setting s LEFT JOIN pg_roles r ON r.oid=s.setrole WHERE s.setdatabase=4356684)
SELECT rolname, split_part(config, '=', 1) AS variable,        replace(config, split_part(config, '=', 1) || '=', '') AS value
FROM configs

SELECT 1;

SELECT groname FROM pg_group ORDER BY groname

SELECT rolname FROM pg_roles WHERE rolcanlogin ORDER BY 1

CREATE SCHEMA schemey;


SELECT CASE WHEN nspname LIKE E'pg\\_temp\\_%' THEN 1
            WHEN (nspname LIKE E'pg\\_%') THEN 0
            ELSE 3 END AS nsptyp,
       nsp.nspname, nsp.oid, pg_get_userbyid(nspowner) AS namespaceowner, nspacl, description,       has_schema_privilege(nsp.oid, 'CREATE') as cancreate,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=nsp.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=nsp.oid) AS providers
  FROM pg_namespace nsp
  LEFT OUTER JOIN pg_description des ON (des.objoid=nsp.oid AND des.classoid='pg_namespace'::regclass)
 WHERE NOT ((nspname = 'pg_catalog' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pg_class' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'pgagent' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'pga_job' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname = 'information_schema' AND EXISTS (SELECT 1 FROM pg_class WHERE relname = 'tables' AND relnamespace = nsp.oid LIMIT 1)) OR
(nspname LIKE '_%' AND EXISTS (SELECT 1 FROM pg_proc WHERE proname='slonyversion' AND pronamespace = nsp.oid LIMIT 1))
)  AND nspname NOT LIKE E'pg\\_temp\\_%'AND nspname NOT LIKE E'pg\\_toast_temp\\_%' ORDER BY 1, nspname

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 2200::oid AND defaclobjtype='T'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='T'

SELECT c.oid, c.collname, c.collcollate, c.collctype, 
       pg_get_userbyid(c.collowner) as cowner, description
  FROM pg_collation c
  JOIN pg_namespace n ON n.oid=c.collnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_collation'::regclass)
 WHERE c.collnamespace = 4356685::oid
 ORDER BY c.collname

SELECT d.oid, d.typname as domname, d.typbasetype, format_type(b.oid,NULL) as basetype, pg_get_userbyid(d.typowner) as domainowner, 
c.oid AS colloid, c.collname, cn.nspname as collnspname, 
       d.typlen, d.typtypmod, d.typnotnull, d.typdefault, d.typndims, d.typdelim, bn.nspname as basensp,
       description, (SELECT COUNT(1) FROM pg_type t2 WHERE t2.typname=d.typname) > 1 AS domisdup,
       (SELECT COUNT(1) FROM pg_type t3 WHERE t3.typname=b.typname) > 1 AS baseisdup,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=d.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=d.oid) AS providers
   FROM pg_type d
  JOIN pg_type b ON b.oid = d.typbasetype
  JOIN pg_namespace bn ON bn.oid=b.typnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=d.oid AND des.classoid='pg_type'::regclass)
  LEFT OUTER JOIN pg_collation c ON d.typcollation=c.oid
  LEFT OUTER JOIN pg_namespace cn ON c.collnamespace=cn.oid
 WHERE d.typtype = 'd' AND d.typnamespace = 4356685::oid
 ORDER BY d.typname

SELECT cfg.oid, cfg.cfgname, pg_get_userbyid(cfg.cfgowner) as cfgowner, cfg.cfgparser, parser.prsname as parsername, description
  FROM pg_ts_config cfg
  LEFT OUTER JOIN pg_ts_parser parser ON parser.oid=cfg.cfgparser
  LEFT OUTER JOIN pg_description des ON (des.objoid=cfg.oid AND des.classoid='pg_ts_config'::regclass)
 WHERE cfg.cfgnamespace = 4356685::oid
 ORDER BY cfg.cfgname

SELECT dict.oid, dict.dictname, pg_get_userbyid(dict.dictowner) as dictowner, t.tmplname, dict.dictinitoption, description
  FROM pg_ts_dict dict
  LEFT OUTER JOIN pg_ts_template t ON t.oid=dict.dicttemplate
  LEFT OUTER JOIN pg_description des ON (des.objoid=dict.oid AND des.classoid='pg_ts_dict'::regclass)
 WHERE dict.dictnamespace = 4356685::oid
 ORDER BY dict.dictname

SELECT prs.oid, prs.prsname, prs.prsstart, prs.prstoken, prs.prsend, prs.prslextype, prs.prsheadline, description
  FROM pg_ts_parser prs
  LEFT OUTER JOIN pg_description des ON (des.objoid=prs.oid AND des.classoid='pg_ts_parser'::regclass)
 WHERE prs.prsnamespace = 4356685::oid
 ORDER BY prs.prsname

SELECT tmpl.oid, tmpl.tmplname, tmpl.tmplinit, tmpl.tmpllexize, description
  FROM pg_ts_template tmpl
  LEFT OUTER JOIN pg_description des ON (des.objoid=tmpl.oid AND des.classoid='pg_ts_template'::regclass)
 WHERE tmpl.tmplnamespace = 4356685::oid
 ORDER BY tmpl.tmplname

SELECT proname, pronargs, proargtypes[0] AS arg0, proargtypes[1] AS arg1, proargtypes[2] AS arg2
  FROM pg_proc
  JOIN pg_namespace n ON n.oid=pronamespace
 WHERE proname IN ('pg_tablespace_size', 'pg_file_read', 'pg_logfile_rotate', 'pg_postmaster_starttime', 'pg_terminate_backend', 'pg_reload_conf', 'pgstattuple', 'pgstatindex')
   AND nspname IN ('pg_catalog', 'public')

SELECT count(*) FROM pg_attribute WHERE attrelid = 'pg_catalog.pg_proc'::regclass AND attname = 'proargdefaults'

SELECT pr.oid, pr.xmin, pr.*, format_type(TYP.oid, NULL) AS typname, typns.nspname AS typnsp, lanname, proargnames, pg_get_expr(proargdefaults, 'pg_catalog.pg_class'::regclass) AS proargdefaultvals, pronargdefaults, proconfig,        pg_get_userbyid(proowner) as funcowner, description,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=pr.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=pr.oid) AS providers
  FROM pg_proc pr
  JOIN pg_type typ ON typ.oid=prorettype
  JOIN pg_namespace typns ON typns.oid=typ.typnamespace
  JOIN pg_language lng ON lng.oid=prolang
  LEFT OUTER JOIN pg_description des ON (des.objoid=pr.oid AND des.classoid='pg_proc'::regclass)
 WHERE proisagg = FALSE AND pronamespace = 4356685::oid
   AND typname NOT IN ('trigger', 'event_trigger') 
 ORDER BY proname

SELECT oid, format_type(oid, NULL) AS typname FROM pg_type

SELECT cl.oid, relname, pg_get_userbyid(relowner) AS seqowner, relacl, description,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=cl.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=cl.oid) AS providers
  FROM pg_class cl
  LEFT OUTER JOIN pg_description des ON (des.objoid=cl.oid AND des.classoid='pg_class'::regclass)
 WHERE relkind = 'S' AND relnamespace  = 4356685::oid
 ORDER BY relname

SELECT rel.oid, rel.relname, rel.reltablespace AS spcoid, spc.spcname, pg_get_userbyid(rel.relowner) AS relowner, rel.relacl, rel.relhasoids, rel.relhassubclass, rel.reltuples, des.description, con.conname, con.conkey,
       EXISTS(select 1 FROM pg_trigger
                       JOIN pg_proc pt ON pt.oid=tgfoid AND pt.proname='logtrigger'
                       JOIN pg_proc pc ON pc.pronamespace=pt.pronamespace AND pc.proname='slonyversion'
                     WHERE tgrelid=rel.oid) AS isrepl,
       (select count(*) FROM pg_trigger
                     WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount
, rel.relpersistence 
, substring(array_to_string(rel.reloptions, ',') FROM 'fillfactor=([0-9]*)') AS fillfactor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS autovacuum_enabled 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS autovacuum_vacuum_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_vacuum_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS autovacuum_analyze_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_analyze_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS autovacuum_vacuum_cost_delay 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS autovacuum_vacuum_cost_limit 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS autovacuum_freeze_min_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS autovacuum_freeze_max_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS autovacuum_freeze_table_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS toast_autovacuum_enabled 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS toast_autovacuum_vacuum_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_vacuum_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS toast_autovacuum_analyze_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_analyze_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS toast_autovacuum_vacuum_cost_delay 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS toast_autovacuum_vacuum_cost_limit 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS toast_autovacuum_freeze_min_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS toast_autovacuum_freeze_max_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS toast_autovacuum_freeze_table_age 
, rel.reloptions AS reloptions, tst.reloptions AS toast_reloptions 
, (CASE WHEN rel.reltoastrelid = 0 THEN false ELSE true END) AS hastoasttable
, rel.reloftype, typ.typname
,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=rel.oid AND sl1.objsubid=0) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=rel.oid AND sl2.objsubid=0) AS providers  FROM pg_class rel
  LEFT OUTER JOIN pg_tablespace spc on spc.oid=rel.reltablespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rel.oid AND des.objsubid=0 AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_constraint con ON con.conrelid=rel.oid AND con.contype='p'
  LEFT OUTER JOIN pg_class tst ON tst.oid = rel.reltoastrelid
LEFT JOIN pg_type typ ON rel.reloftype=typ.oid
 WHERE rel.relkind IN ('r','s','t') AND rel.relnamespace = 4356685::oid
 ORDER BY rel.relname

SELECT pr.oid, pr.xmin, pr.*, format_type(TYP.oid, NULL) AS typname, typns.nspname AS typnsp, lanname, proargnames, pg_get_expr(proargdefaults, 'pg_catalog.pg_class'::regclass) AS proargdefaultvals, pronargdefaults, proconfig,        pg_get_userbyid(proowner) as funcowner, description,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=pr.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=pr.oid) AS providers
  FROM pg_proc pr
  JOIN pg_type typ ON typ.oid=prorettype
  JOIN pg_namespace typns ON typns.oid=typ.typnamespace
  JOIN pg_language lng ON lng.oid=prolang
  LEFT OUTER JOIN pg_description des ON (des.objoid=pr.oid AND des.classoid='pg_proc'::regclass)
 WHERE proisagg = FALSE AND pronamespace = 4356685::oid
AND (typname IN ('trigger', 'event_trigger') 
AND lanname NOT IN ('edbspl', 'sql', 'internal')) ORDER BY proname

SELECT oid, format_type(oid, NULL) AS typname FROM pg_type

SELECT t.oid, t.*, format_type(t.oid, null) AS alias,
pg_get_userbyid(t.typowner) as typeowner, e.typname as element,
description, ct.oid AS taboid,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=t.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=t.oid) AS providers
  FROM pg_type t
  LEFT OUTER JOIN pg_type e ON e.oid=t.typelem
  LEFT OUTER JOIN pg_class ct ON ct.oid=t.typrelid AND ct.relkind <> 'c'
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_type'::regclass)
 WHERE t.typtype != 'd' AND t.typname NOT LIKE E'\\_%' AND t.typnamespace = 4356685::oid
   AND ct.oid IS NULL
 ORDER BY t.typname

SELECT c.oid, c.xmin, c.relname,c.reltablespace AS spcoid, c.relkind, c.relispopulated AS ispopulated,spc.spcname, pg_get_userbyid(c.relowner) AS viewowner, c.relacl, description, pg_get_viewdef(c.oid, true) AS definition,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=c.oid AND sl1.objsubid=0) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=c.oid AND sl2.objsubid=0) AS providers,
substring(array_to_string(c.reloptions, ',') FROM 'security_barrier=([a-z|0-9]*)') AS security_barrier, substring(array_to_string(c.reloptions, ',') FROM 'fillfactor=([0-9]*)') AS fillfactor 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS autovacuum_enabled 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS autovacuum_vacuum_threshold 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_vacuum_scale_factor 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS autovacuum_analyze_threshold 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_analyze_scale_factor 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS autovacuum_vacuum_cost_delay 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS autovacuum_vacuum_cost_limit 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS autovacuum_freeze_min_age 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS autovacuum_freeze_max_age 
, substring(array_to_string(c.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS autovacuum_freeze_table_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS toast_autovacuum_enabled 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS toast_autovacuum_vacuum_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_vacuum_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS toast_autovacuum_analyze_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_analyze_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS toast_autovacuum_vacuum_cost_delay 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS toast_autovacuum_vacuum_cost_limit 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS toast_autovacuum_freeze_min_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS toast_autovacuum_freeze_max_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS toast_autovacuum_freeze_table_age 
, c.reloptions AS reloptions, tst.reloptions AS toast_reloptions 
, (CASE WHEN c.reltoastrelid = 0 THEN false ELSE true END) AS hastoasttable

  FROM pg_class c
  LEFT OUTER JOIN pg_tablespace spc on spc.oid=c.reltablespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid and des.objsubid=0 AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_class tst ON tst.oid = c.reltoastrelid
 WHERE ((c.relhasrules AND (EXISTS (
           SELECT r.rulename FROM pg_rewrite r
            WHERE ((r.ev_class = c.oid)
              AND (bpchar(r.ev_type) = '1'::bpchar)) ))) OR (c.relkind = 'v'::char))
   AND c.relnamespace = 4356685::oid
 ORDER BY relname

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='r'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='S'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='f'

SELECT defaclacl FROM pg_catalog.pg_default_acl dacl WHERE dacl.defaclnamespace = 4356685::oid AND defaclobjtype='T'

SELECT rel.oid, rel.relname, rel.reltablespace AS spcoid, spc.spcname, pg_get_userbyid(rel.relowner) AS relowner, rel.relacl, rel.relhasoids, rel.relhassubclass, rel.reltuples, des.description, con.conname, con.conkey,
       EXISTS(select 1 FROM pg_trigger
                       JOIN pg_proc pt ON pt.oid=tgfoid AND pt.proname='logtrigger'
                       JOIN pg_proc pc ON pc.pronamespace=pt.pronamespace AND pc.proname='slonyversion'
                     WHERE tgrelid=rel.oid) AS isrepl,
       (select count(*) FROM pg_trigger
                     WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount
, rel.relpersistence 
, substring(array_to_string(rel.reloptions, ',') FROM 'fillfactor=([0-9]*)') AS fillfactor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS autovacuum_enabled 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS autovacuum_vacuum_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_vacuum_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS autovacuum_analyze_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_analyze_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS autovacuum_vacuum_cost_delay 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS autovacuum_vacuum_cost_limit 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS autovacuum_freeze_min_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS autovacuum_freeze_max_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS autovacuum_freeze_table_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS toast_autovacuum_enabled 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS toast_autovacuum_vacuum_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_vacuum_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS toast_autovacuum_analyze_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_analyze_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS toast_autovacuum_vacuum_cost_delay 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS toast_autovacuum_vacuum_cost_limit 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS toast_autovacuum_freeze_min_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS toast_autovacuum_freeze_max_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS toast_autovacuum_freeze_table_age 
, rel.reloptions AS reloptions, tst.reloptions AS toast_reloptions 
, (CASE WHEN rel.reltoastrelid = 0 THEN false ELSE true END) AS hastoasttable
, rel.reloftype, typ.typname
,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=rel.oid AND sl1.objsubid=0) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=rel.oid AND sl2.objsubid=0) AS providers  FROM pg_class rel
  LEFT OUTER JOIN pg_tablespace spc on spc.oid=rel.reltablespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rel.oid AND des.objsubid=0 AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_constraint con ON con.conrelid=rel.oid AND con.contype='p'
  LEFT OUTER JOIN pg_class tst ON tst.oid = rel.reltoastrelid
LEFT JOIN pg_type typ ON rel.reloftype=typ.oid
 WHERE rel.relkind IN ('r','s','t') AND rel.relnamespace = 4356685::oid
 ORDER BY rel.relname

SELECT 1;

SELECT oid, spcname FROM pg_tablespace WHERE spcname <> 'pg_global' ORDER BY spcname

SELECT * FROM (SELECT format_type(t.oid,NULL) AS typname, CASE WHEN typelem > 0 THEN typelem ELSE t.oid END as elemoid, typlen, typtype, t.oid, nspname,
       (SELECT COUNT(1) FROM pg_type t2 WHERE t2.typname = t.typname) > 1 AS isdup
  FROM pg_type t
  JOIN pg_namespace nsp ON typnamespace=nsp.oid
 WHERE (NOT (typname = 'unknown' AND nspname = 'pg_catalog')) AND typisdefined AND typtype IN ('b', 'c', 'd', 'e', 'r')AND NOT EXISTS (select 1 from pg_class where relnamespace=typnamespace and relname = typname and relkind != 'c') AND (typname not like '_%' OR NOT EXISTS (select 1 from pg_class where relnamespace=typnamespace and relname = substring(typname from 2)::name and relkind != 'c'))  AND nsp.nspname != 'information_schema'
 UNION SELECT 'smallserial', 0, 2, 'b', 0, 'pg_catalog', false
 UNION SELECT 'bigserial', 0, 8, 'b', 0, 'pg_catalog', false
 UNION SELECT 'serial', 0, 4, 'b', 0, 'pg_catalog', false
  ) AS dummy ORDER BY nspname <> 'pg_catalog', nspname <> 'public', nspname, 1

SELECT t.oid, t.typname FROM pg_type t, pg_namespace n WHERE t.typtype='c' AND t.typnamespace=n.oid AND NOT (n.nspname like 'pg_%' OR n.nspname='information_schema') ORDER BY typname

SELECT nspname FROM pg_namespace nsp
  JOIN pg_proc pr ON pronamespace=nsp.oid
 WHERE proname IN ('slonyversion')

SELECT c.oid, quote_ident(n.nspname)||'.'||quote_ident(c.relname) FROM pg_class c, pg_namespace n WHERE c.relnamespace=n.oid AND c.relkind IN ('r', 'v', 'f') AND (n.nspname NOT LIKE E'pg\_%' AND n.nspname NOT in ('information_schema')) ORDER BY 1

SELECT c.oid, c.relname , nspname
  FROM pg_class c
  JOIN pg_namespace n ON n.oid=c.relnamespace
 WHERE relkind='r'
   AND (n.nspname NOT LIKE E'pg\_%' AND n.nspname NOT in ('information_schema')) ORDER BY relnamespace, c.relname

SELECT name, setting FROM pg_settings WHERE name like '%vacuum%' ORDER BY name

SELECT groname FROM pg_group ORDER BY groname

SELECT rolname FROM pg_roles WHERE rolcanlogin ORDER BY 1

SELECT nspname FROM pg_namespace WHERE nspname NOT LIKE E'pg\\_%' AND nspname != 'information_schema' ORDER BY nspname

SELECT nspname, collname
  FROM pg_collation c, pg_namespace n
  WHERE c.collnamespace=n.oid
  ORDER BY nspname, collname

SELECT nspname, collname
  FROM pg_collation c, pg_namespace n
  WHERE c.collnamespace=n.oid
  ORDER BY nspname, collname

SELECT nspname, collname
  FROM pg_collation c, pg_namespace n
  WHERE c.collnamespace=n.oid
  ORDER BY nspname, collname

SELECT nspname, collname
  FROM pg_collation c, pg_namespace n
  WHERE c.collnamespace=n.oid
  ORDER BY nspname, collname

SELECT oid, spcname FROM pg_tablespace WHERE spcname <> 'pg_global' ORDER BY spcname

SELECT oid, amname FROM pg_am WHERE EXISTS (SELECT 1 FROM pg_proc WHERE oid=amgettuple) ORDER BY amname

SELECT DISTINCT oprname FROM pg_operator 
WHERE (    oprleft=25 OR oprright=25) AND oprcom > 0 
ORDER BY oprname

SELECT opcname FROM pg_opclass WHERE opcmethod=403 AND NOT opcdefault ORDER BY 1

SELECT DISTINCT oprname FROM pg_operator 
WHERE (    oprleft=23 OR oprright=23) AND oprcom > 0 
ORDER BY oprname

SELECT opcname FROM pg_opclass WHERE opcmethod=403 AND NOT opcdefault ORDER BY 1

CREATE TABLE schemey.ttt
(
   id integer, 
   name text, 
   "number" integer, 
   PRIMARY KEY (id)
) 
WITH (
  OIDS = FALSE
)
;


SELECT rel.oid, rel.relname, rel.reltablespace AS spcoid, spc.spcname, pg_get_userbyid(rel.relowner) AS relowner, rel.relacl, rel.relhasoids, rel.relhassubclass, rel.reltuples, des.description, con.conname, con.conkey,
       EXISTS(select 1 FROM pg_trigger
                       JOIN pg_proc pt ON pt.oid=tgfoid AND pt.proname='logtrigger'
                       JOIN pg_proc pc ON pc.pronamespace=pt.pronamespace AND pc.proname='slonyversion'
                     WHERE tgrelid=rel.oid) AS isrepl,
       (select count(*) FROM pg_trigger
                     WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount
, rel.relpersistence 
, substring(array_to_string(rel.reloptions, ',') FROM 'fillfactor=([0-9]*)') AS fillfactor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS autovacuum_enabled 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS autovacuum_vacuum_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_vacuum_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS autovacuum_analyze_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_analyze_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS autovacuum_vacuum_cost_delay 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS autovacuum_vacuum_cost_limit 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS autovacuum_freeze_min_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS autovacuum_freeze_max_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS autovacuum_freeze_table_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS toast_autovacuum_enabled 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS toast_autovacuum_vacuum_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_vacuum_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS toast_autovacuum_analyze_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_analyze_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS toast_autovacuum_vacuum_cost_delay 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS toast_autovacuum_vacuum_cost_limit 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS toast_autovacuum_freeze_min_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS toast_autovacuum_freeze_max_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS toast_autovacuum_freeze_table_age 
, rel.reloptions AS reloptions, tst.reloptions AS toast_reloptions 
, (CASE WHEN rel.reltoastrelid = 0 THEN false ELSE true END) AS hastoasttable
, rel.reloftype, typ.typname
,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=rel.oid AND sl1.objsubid=0) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=rel.oid AND sl2.objsubid=0) AS providers  FROM pg_class rel
  LEFT OUTER JOIN pg_tablespace spc on spc.oid=rel.reltablespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rel.oid AND des.objsubid=0 AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_constraint con ON con.conrelid=rel.oid AND con.contype='p'
  LEFT OUTER JOIN pg_class tst ON tst.oid = rel.reltoastrelid
LEFT JOIN pg_type typ ON rel.reloftype=typ.oid
 WHERE rel.relkind IN ('r','s','t') AND rel.relnamespace = 4356685::oid
 ORDER BY rel.relname

SELECT version();

SET DateStyle=ISO;
SET client_min_messages=notice;
SET bytea_output=escape;
SELECT oid, pg_encoding_to_char(encoding) AS encoding, datlastsysoid
  FROM pg_database WHERE oid = 4356684

set client_encoding to 'UNICODE'

INSERT INTO ttt VALUES (2,"bob", 65)

INSERT INTO schemey.ttt VALUES (2,"bob", 65)

INSERT INTO schemey.ttt VALUES (2, 'bob', 65)

INSERT INTO schemey.ttt VALUES (3, 'tim', 95)

INSERT INTO schemey.ttt VALUES (9, 'joe', 85)

SELECT * FROM schemey.ttt;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt WHERE id < 7;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt WHERE id > 3;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt WHERE id >= 3;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT * FROM schemey.ttt WHERE id >= 3;

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 25

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=25

SELECT format_type(oid,-1) as typname FROM pg_type WHERE oid = 23

SELECT CASE WHEN typbasetype=0 THEN oid else typbasetype END AS basetype
  FROM pg_type WHERE oid=23

SELECT pr.oid, pr.xmin, pr.*, format_type(TYP.oid, NULL) AS typname, typns.nspname AS typnsp, lanname, proargnames, pg_get_expr(proargdefaults, 'pg_catalog.pg_class'::regclass) AS proargdefaultvals, pronargdefaults, proconfig,        pg_get_userbyid(proowner) as funcowner, description,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=pr.oid) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=pr.oid) AS providers
  FROM pg_proc pr
  JOIN pg_type typ ON typ.oid=prorettype
  JOIN pg_namespace typns ON typns.oid=typ.typnamespace
  JOIN pg_language lng ON lng.oid=prolang
  LEFT OUTER JOIN pg_description des ON (des.objoid=pr.oid AND des.classoid='pg_proc'::regclass)
 WHERE proisagg = FALSE AND pronamespace = 4356685::oid
AND (typname IN ('trigger', 'event_trigger') 
AND lanname NOT IN ('edbspl', 'sql', 'internal')) ORDER BY proname

SELECT oid, format_type(oid, NULL) AS typname FROM pg_type

SELECT inhparent::regclass AS inhrelname,
  (SELECT count(*) FROM pg_attribute WHERE attrelid=inhparent AND attnum>0) AS colscount
  FROM pg_inherits
  WHERE inhrelid =  4356686::oid::oid
  ORDER BY inhseqno

SELECT att.*, def.*, pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS defval, CASE WHEN att.attndims > 0 THEN 1 ELSE 0 END AS isarray, format_type(ty.oid,NULL) AS typname, format_type(ty.oid,att.atttypmod) AS displaytypname, tn.nspname as typnspname, et.typname as elemtypname,
  ty.typstorage AS defaultstorage, cl.relname, na.nspname, att.attstattarget, description, cs.relname AS sername, ns.nspname AS serschema,
  (SELECT count(1) FROM pg_type t2 WHERE t2.typname=ty.typname) > 1 AS isdup, indkey,
  coll.collname, nspc.nspname as collnspname,
  attoptions,
  EXISTS(SELECT 1 FROM  pg_constraint WHERE conrelid=att.attrelid AND contype='f' AND att.attnum=ANY(conkey)) As isfk,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=att.attrelid AND sl1.objsubid=att.attnum) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=att.attrelid AND sl2.objsubid=att.attnum) AS providers
  FROM pg_attribute att
  JOIN pg_type ty ON ty.oid=atttypid
  JOIN pg_namespace tn ON tn.oid=ty.typnamespace
  JOIN pg_class cl ON cl.oid=att.attrelid
  JOIN pg_namespace na ON na.oid=cl.relnamespace
  LEFT OUTER JOIN pg_type et ON et.oid=ty.typelem
  LEFT OUTER JOIN pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
  LEFT OUTER JOIN pg_description des ON (des.objoid=att.attrelid AND des.objsubid=att.attnum AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN (pg_depend JOIN pg_class cs ON objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
  LEFT OUTER JOIN pg_namespace ns ON ns.oid=cs.relnamespace
  LEFT OUTER JOIN pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
  LEFT OUTER JOIN pg_collation coll ON att.attcollation=coll.oid
  LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid
 WHERE att.attrelid = 4356686::oid
   AND att.attnum > 0
   AND att.attisdropped IS FALSE
 ORDER BY att.attnum

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='p'

 ORDER BY cls.relname

SELECT ct.oid, conname, condeferrable, condeferred, confupdtype, confdeltype, confmatchtype, conkey, confkey, confrelid, nl.nspname as fknsp, cl.relname as fktab, nr.nspname as refnsp, cr.relname as reftab, description, convalidated
  FROM pg_constraint ct
  JOIN pg_class cl ON cl.oid=conrelid
  JOIN pg_namespace nl ON nl.oid=cl.relnamespace
  JOIN pg_class cr ON cr.oid=confrelid
  JOIN pg_namespace nr ON nr.oid=cr.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=ct.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype='f' AND conrelid = 4356686::oid
 ORDER BY conname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='x'

 ORDER BY cls.relname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='u'

 ORDER BY cls.relname

SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description,
       pg_get_expr(conbin, conrelid, true) as consrc
, connoinherit, convalidated  FROM pg_constraint c
  JOIN pg_class cl ON cl.oid=conrelid
  JOIN pg_namespace nl ON nl.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype = 'c' AND conrelid =  4356686::oid
UNION
SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,
       regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \\((.*)\\).*', E'\\1') as consrc
, connoinherit, convalidated  FROM pg_constraint c
  JOIN pg_type t ON t.oid=contypid
  JOIN pg_namespace nl ON nl.oid=typnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype = 'c' AND contypid =  4356686::oid
 ORDER BY conname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid
   AND conname IS NULL
 ORDER BY cls.relname

SELECT rw.oid, rw.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable, nspname, description,
       pg_get_ruledef(rw.oid, true) AS definition
  FROM pg_rewrite rw
  JOIN pg_class cl ON cl.oid=rw.ev_class
  JOIN pg_namespace nsp ON nsp.oid=cl.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rw.oid AND des.classoid='pg_rewrite'::regclass)
 WHERE ev_class = 4356686
 ORDER BY rw.rulename

SELECT t.oid, t.xmin, t.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable,   nspname, des.description, l.lanname, p.prosrc, 
  substring(pg_get_triggerdef(t.oid), 'WHEN (.*) EXECUTE PROCEDURE') AS whenclause
  FROM pg_trigger t
  JOIN pg_class cl ON cl.oid=tgrelid
  JOIN pg_namespace na ON na.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_trigger'::regclass)
  LEFT OUTER JOIN pg_proc p ON p.oid=t.tgfoid
  LEFT OUTER JOIN pg_language l ON l.oid=p.prolang
 WHERE NOT tgisinternal
  AND tgrelid = 4356686::oid
 ORDER BY tgname

SELECT attname
  FROM pg_attribute
 WHERE attrelid=4356686::oid AND attnum IN (1)

SELECT count(*) AS rows FROM ONLY schemey.ttt

SELECT c.oid, c.relname , nspname
  FROM pg_inherits i
  JOIN pg_class c ON c.oid = i.inhparent
  JOIN pg_namespace n ON n.oid=c.relnamespace
 WHERE i.inhrelid = 4356686::oid
 ORDER BY inhseqno

SELECT
  i.indoption[0] AS options,
  pg_get_indexdef(i.indexrelid, 1, true) AS coldef,
  op.oprname,
  CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname
,
  coll.collname, nspc.nspname as collnspname
FROM pg_index i
JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum = 1)
LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0])
LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1])
LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid
LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid
WHERE i.indexrelid = 4356692::oid

SELECT opcname FROM pg_opclass WHERE oid=1978

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid
   AND conname IS NULL
 ORDER BY cls.relname

SELECT rw.oid, rw.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable, nspname, description,
       pg_get_ruledef(rw.oid, true) AS definition
  FROM pg_rewrite rw
  JOIN pg_class cl ON cl.oid=rw.ev_class
  JOIN pg_namespace nsp ON nsp.oid=cl.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rw.oid AND des.classoid='pg_rewrite'::regclass)
 WHERE ev_class = 4356686
 ORDER BY rw.rulename

SELECT t.oid, t.xmin, t.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable,   nspname, des.description, l.lanname, p.prosrc, 
  substring(pg_get_triggerdef(t.oid), 'WHEN (.*) EXECUTE PROCEDURE') AS whenclause
  FROM pg_trigger t
  JOIN pg_class cl ON cl.oid=tgrelid
  JOIN pg_namespace na ON na.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_trigger'::regclass)
  LEFT OUTER JOIN pg_proc p ON p.oid=t.tgfoid
  LEFT OUTER JOIN pg_language l ON l.oid=p.prolang
 WHERE NOT tgisinternal
  AND tgrelid = 4356686::oid
 ORDER BY tgname

SELECT rel.oid, rel.relname, rel.reltablespace AS spcoid, spc.spcname, pg_get_userbyid(rel.relowner) AS relowner, rel.relacl, rel.relhasoids, rel.relhassubclass, rel.reltuples, des.description, con.conname, con.conkey,
       EXISTS(select 1 FROM pg_trigger
                       JOIN pg_proc pt ON pt.oid=tgfoid AND pt.proname='logtrigger'
                       JOIN pg_proc pc ON pc.pronamespace=pt.pronamespace AND pc.proname='slonyversion'
                     WHERE tgrelid=rel.oid) AS isrepl,
       (select count(*) FROM pg_trigger
                     WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount
, rel.relpersistence 
, substring(array_to_string(rel.reloptions, ',') FROM 'fillfactor=([0-9]*)') AS fillfactor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS autovacuum_enabled 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS autovacuum_vacuum_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_vacuum_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS autovacuum_analyze_threshold 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS autovacuum_analyze_scale_factor 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS autovacuum_vacuum_cost_delay 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS autovacuum_vacuum_cost_limit 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS autovacuum_freeze_min_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS autovacuum_freeze_max_age 
, substring(array_to_string(rel.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS autovacuum_freeze_table_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_enabled=([a-z|0-9]*)') AS toast_autovacuum_enabled 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_threshold=([0-9]*)') AS toast_autovacuum_vacuum_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_vacuum_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_threshold=([0-9]*)') AS toast_autovacuum_analyze_threshold 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_analyze_scale_factor=([0-9]*[.][0-9]*)') AS toast_autovacuum_analyze_scale_factor 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_delay=([0-9]*)') AS toast_autovacuum_vacuum_cost_delay 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_vacuum_cost_limit=([0-9]*)') AS toast_autovacuum_vacuum_cost_limit 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_min_age=([0-9]*)') AS toast_autovacuum_freeze_min_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_max_age=([0-9]*)') AS toast_autovacuum_freeze_max_age 
, substring(array_to_string(tst.reloptions, ',') FROM 'autovacuum_freeze_table_age=([0-9]*)') AS toast_autovacuum_freeze_table_age 
, rel.reloptions AS reloptions, tst.reloptions AS toast_reloptions 
, (CASE WHEN rel.reltoastrelid = 0 THEN false ELSE true END) AS hastoasttable
, rel.reloftype, typ.typname
,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=rel.oid AND sl1.objsubid=0) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=rel.oid AND sl2.objsubid=0) AS providers  FROM pg_class rel
  LEFT OUTER JOIN pg_tablespace spc on spc.oid=rel.reltablespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rel.oid AND des.objsubid=0 AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_constraint con ON con.conrelid=rel.oid AND con.contype='p'
  LEFT OUTER JOIN pg_class tst ON tst.oid = rel.reltoastrelid
LEFT JOIN pg_type typ ON rel.reloftype=typ.oid
 WHERE rel.relkind IN ('r','s','t') AND rel.relnamespace = 4356685::oid

   AND rel.oid=4356686::oid ORDER BY rel.relname

SELECT inhparent::regclass AS inhrelname,
  (SELECT count(*) FROM pg_attribute WHERE attrelid=inhparent AND attnum>0) AS colscount
  FROM pg_inherits
  WHERE inhrelid =  4356686::oid::oid
  ORDER BY inhseqno

SELECT att.*, def.*, pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS defval, CASE WHEN att.attndims > 0 THEN 1 ELSE 0 END AS isarray, format_type(ty.oid,NULL) AS typname, format_type(ty.oid,att.atttypmod) AS displaytypname, tn.nspname as typnspname, et.typname as elemtypname,
  ty.typstorage AS defaultstorage, cl.relname, na.nspname, att.attstattarget, description, cs.relname AS sername, ns.nspname AS serschema,
  (SELECT count(1) FROM pg_type t2 WHERE t2.typname=ty.typname) > 1 AS isdup, indkey,
  coll.collname, nspc.nspname as collnspname,
  attoptions,
  EXISTS(SELECT 1 FROM  pg_constraint WHERE conrelid=att.attrelid AND contype='f' AND att.attnum=ANY(conkey)) As isfk,
(SELECT array_agg(label) FROM pg_seclabels sl1 WHERE sl1.objoid=att.attrelid AND sl1.objsubid=att.attnum) AS labels,
(SELECT array_agg(provider) FROM pg_seclabels sl2 WHERE sl2.objoid=att.attrelid AND sl2.objsubid=att.attnum) AS providers
  FROM pg_attribute att
  JOIN pg_type ty ON ty.oid=atttypid
  JOIN pg_namespace tn ON tn.oid=ty.typnamespace
  JOIN pg_class cl ON cl.oid=att.attrelid
  JOIN pg_namespace na ON na.oid=cl.relnamespace
  LEFT OUTER JOIN pg_type et ON et.oid=ty.typelem
  LEFT OUTER JOIN pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
  LEFT OUTER JOIN pg_description des ON (des.objoid=att.attrelid AND des.objsubid=att.attnum AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN (pg_depend JOIN pg_class cs ON objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
  LEFT OUTER JOIN pg_namespace ns ON ns.oid=cs.relnamespace
  LEFT OUTER JOIN pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
  LEFT OUTER JOIN pg_collation coll ON att.attcollation=coll.oid
  LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid
 WHERE att.attrelid = 4356686::oid
   AND att.attnum > 0
   AND att.attisdropped IS FALSE
 ORDER BY att.attnum

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='p'

 ORDER BY cls.relname

SELECT ct.oid, conname, condeferrable, condeferred, confupdtype, confdeltype, confmatchtype, conkey, confkey, confrelid, nl.nspname as fknsp, cl.relname as fktab, nr.nspname as refnsp, cr.relname as reftab, description, convalidated
  FROM pg_constraint ct
  JOIN pg_class cl ON cl.oid=conrelid
  JOIN pg_namespace nl ON nl.oid=cl.relnamespace
  JOIN pg_class cr ON cr.oid=confrelid
  JOIN pg_namespace nr ON nr.oid=cr.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=ct.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype='f' AND conrelid = 4356686::oid
 ORDER BY conname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='x'

 ORDER BY cls.relname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid   AND contype='u'

 ORDER BY cls.relname

SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description,
       pg_get_expr(conbin, conrelid, true) as consrc
, connoinherit, convalidated  FROM pg_constraint c
  JOIN pg_class cl ON cl.oid=conrelid
  JOIN pg_namespace nl ON nl.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype = 'c' AND conrelid =  4356686::oid
UNION
SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,
       regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \\((.*)\\).*', E'\\1') as consrc
, connoinherit, convalidated  FROM pg_constraint c
  JOIN pg_type t ON t.oid=contypid
  JOIN pg_namespace nl ON nl.oid=typnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass)
 WHERE contype = 'c' AND contypid =  4356686::oid
 ORDER BY conname

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid
   AND conname IS NULL
 ORDER BY cls.relname

SELECT rw.oid, rw.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable, nspname, description,
       pg_get_ruledef(rw.oid, true) AS definition
  FROM pg_rewrite rw
  JOIN pg_class cl ON cl.oid=rw.ev_class
  JOIN pg_namespace nsp ON nsp.oid=cl.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rw.oid AND des.classoid='pg_rewrite'::regclass)
 WHERE ev_class = 4356686
 ORDER BY rw.rulename

SELECT t.oid, t.xmin, t.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable,   nspname, des.description, l.lanname, p.prosrc, 
  substring(pg_get_triggerdef(t.oid), 'WHEN (.*) EXECUTE PROCEDURE') AS whenclause
  FROM pg_trigger t
  JOIN pg_class cl ON cl.oid=tgrelid
  JOIN pg_namespace na ON na.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_trigger'::regclass)
  LEFT OUTER JOIN pg_proc p ON p.oid=t.tgfoid
  LEFT OUTER JOIN pg_language l ON l.oid=p.prolang
 WHERE NOT tgisinternal
  AND tgrelid = 4356686::oid
 ORDER BY tgname

SELECT attname
  FROM pg_attribute
 WHERE attrelid=4356686::oid AND attnum IN (1)

SELECT count(*) AS rows FROM ONLY schemey.ttt

SELECT c.oid, c.relname , nspname
  FROM pg_inherits i
  JOIN pg_class c ON c.oid = i.inhparent
  JOIN pg_namespace n ON n.oid=c.relnamespace
 WHERE i.inhrelid = 4356686::oid
 ORDER BY inhseqno

SELECT
  i.indoption[0] AS options,
  pg_get_indexdef(i.indexrelid, 1, true) AS coldef,
  op.oprname,
  CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname
,
  coll.collname, nspc.nspname as collnspname
FROM pg_index i
JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum = 1)
LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0])
LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1])
LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid
LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid
WHERE i.indexrelid = 4356692::oid

SELECT opcname FROM pg_opclass WHERE oid=1978

SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,
       indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description,
       pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname
, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor 
  FROM pg_index idx
  JOIN pg_class cls ON cls.oid=indexrelid
  JOIN pg_class tab ON tab.oid=indrelid
  LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace
  JOIN pg_namespace n ON n.oid=tab.relnamespace
  JOIN pg_am am ON am.oid=cls.relam
  LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i')
  LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)
  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass)
  LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass)
 WHERE indrelid = 4356686::oid
   AND conname IS NULL
 ORDER BY cls.relname

SELECT rw.oid, rw.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable, nspname, description,
       pg_get_ruledef(rw.oid, true) AS definition
  FROM pg_rewrite rw
  JOIN pg_class cl ON cl.oid=rw.ev_class
  JOIN pg_namespace nsp ON nsp.oid=cl.relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=rw.oid AND des.classoid='pg_rewrite'::regclass)
 WHERE ev_class = 4356686
 ORDER BY rw.rulename

SELECT t.oid, t.xmin, t.*, relname, CASE WHEN relkind = 'r' THEN TRUE ELSE FALSE END AS parentistable,   nspname, des.description, l.lanname, p.prosrc, 
  substring(pg_get_triggerdef(t.oid), 'WHEN (.*) EXECUTE PROCEDURE') AS whenclause
  FROM pg_trigger t
  JOIN pg_class cl ON cl.oid=tgrelid
  JOIN pg_namespace na ON na.oid=relnamespace
  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_trigger'::regclass)
  LEFT OUTER JOIN pg_proc p ON p.oid=t.tgfoid
  LEFT OUTER JOIN pg_language l ON l.oid=p.prolang
 WHERE NOT tgisinternal
  AND tgrelid = 4356686::oid
 ORDER BY tgname